############################################vasp_Ueff.wsy##############################
#!/bin/sh
source ~/.bashrc
#Initialization settings
MAX=0.20
MIN=-0.20
STEP=0.05
###sub  name####run
runcode='#!/bin/sh
source ~/.bashrc'
##################################
echo "$runcode" > run.wsy




###################
echo "
            ##########################Author:SuYun Wang#############################
            #############################2021.10.15#################################
            ###                                                                  ###
            ###   Please enter the calculation you want to perform:              ###
            ###   0.Generate input file                                          ###
            ###   1.Calculate DFT groudstate                                     ###    
            ###   2.Calculate SCF and NSCF for DFT+U(1 must be completed first)  ###
            ###   3.Extract Ueff data(2 must be completed first)                 ###
            ###                                                                  ###                        
            ########################################################################
            ########################################################################
"
read arg
#################
if (( ${arg}==0 ));then
    echo "
            ##########################Author:SuYun Wang#############################
            #############################2021.10.15#################################
            ###                                                                  ###
            ###   Please enter the input file you want to generate:              ###
            ###   0.VASP run command                                             ###
            ###   1.INCAR(Incomplete)                                            ###
            ###   2.KPOINTS                                                      ###    
            ###   3.POTCAR(Vaspkit needs to be installed)                        ###
            ###                                                                  ###
            ###                                                                  ###                        
            ########################################################################
            ########################################################################
"
read input
####################VASP run command##########################
if (( ${input}==0 )); then
    echo "
            ##########################Author:SuYun Wang#############################
            #############################2021.10.15#################################
            ###                                                                  ###
            ###        Please enter the control command to run VASP              ###
            ###                                                                  ###                        
            ########################################################################
            ########################################################################
"
    read input2
    echo $input2 >>run.wsy

    fi
####################INCAR INPUT###################
    if (( ${input}==1 )); then
       cat>INCAR<<!
SYSTEM=CAL-Ueff
PREC=A
EDIFF=1E-6
ISMEAR=0
SIGMA=0.2
ISPIN=2
MAGMOM=
LORBIT=11
LMAXMIX=4
!
          echo "
            #######################################################
            #######################################################
            ###                                                 ###
            ###                  Finished ! !                   ### 
            ###                                                 ###
            ###                                                 ###
            #######################################################
            #######################################################
    "
    
    fi
####################KPOINTS INPUT###################
    if ((${input}==2))  ; then
       cat>KPOINTS<<!
Gamma only
0
Monkhorst
1 1 1
0 0 0
!
          echo "
            #######################################################
            #######################################################
            ###                                                 ###
            ###                  Finished ! !                   ### 
            ###                                                 ###
            ###                                                 ###
            #######################################################
            #######################################################
    "
    
    fi
####################POTCAR INPUT###################
    if ((${input}==3))  ; then
       cat>INPUT<<!
103
!
vaspkit < INPUT
rm INPUT
          echo "
            #######################################################
            #######################################################
            ###                                                 ###
            ###                  Finished ! !                   ### 
            ###                                                 ###
            ###                                                 ###
            #######################################################
            #######################################################
    "
    
    fi


fi
    
####################
if (( ${arg}==1 ));then
    #calculation DFT
    #calculate U_{eff}
    for i in $(seq ${MIN} ${STEP} ${MAX})
        do
        mkdir -- "$i"
        cd -- $i
        mkdir 1-DFT 2-U-NSCF 3-U-SCF
        cd 1-DFT
        cp ../../INCAR ../../POSCAR ../../POTCAR ../../KPOINTS ./
        cp ../../INCAR ../../POSCAR  ../../KPOINTS ../2-U-NSCF
        cp ../../INCAR ../../POSCAR ../../KPOINTS ../3-U-SCF
        ##run##
        bash ../../run.wsy
        ####
        cd ../2-U-NSCF
        echo "ICHARG=11">>INCAR 
        cd ../3-U-SCF
        echo "ICHARG=1">>INCAR
        cd ../../
          echo "
            #######################################################
            #######################################################
            ###                                                 ###
            ###                  Finished ! !                   ### 
            ###                                                 ###
            ###                                                 ###
            #######################################################
            #######################################################
    "
    done
fi
########################################
########################################
if (( ${arg}==2 ));then
    echo "
            #######################################################
            #######################################################
            ###                                                 ###
            ###  Please enter the sequence number of the atom   ###
            ###  you want to calculate the U value in POSCAR:   ###
            ###                                                 ###
            #######################################################
            #######################################################
    "
    read arg2
    echo $arg2>>input.wsy
    echo "
            #######################################################
            #######################################################
            ###                                                 ###
            ###  Please enter the sequence number of the atom   ###
            ###  you want to calculate the U value in POSCAR:   ###
            ###  1-p;2-d···                                     ###
            ###                                                 ###
            #######################################################
            #######################################################
    "
    read arg3
    echo $arg3>>input.wsy
        
 ######################################################################       
    #1
    for file in $(seq ${MIN} ${STEP} ${MAX})
        do
        cd -- ${file}
        #2   
        for items in 2 3
            do
            if (( $items==2 ));then
            cd 2-U-NSCF
            
            #copy CHGCAR AND WAVECAR TO 2 3
            cp ../1-DFT/CHGCAR ./
            cp ../1-DFT/WAVECAR ./  
            else
            cd 3-U-SCF
            #copy CHGCAR AND WAVECAR TO 2 3
            cp ../1-DFT/CHGCAR ./
            cp ../1-DFT/WAVECAR ./
            
            fi
        

        #Calculate the number of element types
    
        Num_ELE=$(awk -F ' ' '{print NF}' POSCAR|head -7|tail -1|awk '{printf "%d",$1}')
        num=0
        ############################################
        #3
        for ((i=1;i<=${Num_ELE};i++))
            do
            echo $i
            # atoms type number
            E=$(echo $(head -7 POSCAR|tail -1|awk '{print $(i)}' i="$i"))
            #echo $E
            #num:qian n zhong li zi shu zonghe
            #E:di n zhong li zi shu ge shu
            ((num+=E))
            #echo $num
###########################111111######################################
#######################################################################
            if (( $num==$arg2  ))&&(( $E>1 ));then
                value=$i
                echo "condition 1  [3--2 1]"
                atoms_num=$(echo $(head -7 POSCAR|awk '{print $(i)}' i="$i"))
                name=`echo $( head -6 POSCAR|tail -1|awk '$(value)=$(value)" " $(value)' value="$value" )`
                number=`echo $(head -7 POSCAR|tail -1|awk '$(value)=$(value)-1 " " "1"' value="$value")`   
                #input INCAR
                LDAUL=-1
                LDAUU=0
                LDAUJ=0
                A=-1
                B=0
                echo "writing..."
                #echo ${Num_ELE}
                for ((j=1;j<=${Num_ELE};j++))
                    do 
                    if (($j==$i));then
                        LDAUL="$LDAUL $arg3"
                        LDAUU="$LDAUU ${file}"
                        LDAUJ="$LDAUJ ${file}"
                    else
                        LDAUL="$LDAUL $A"
                        LDAUU="$LDAUU $B"
                        LDAUJ="$LDAUJ $B"
                    fi        
                    done
                    
echo "writing INCAR...."                
echo "###########LSDAU###########
LDAU=.TRUE.
LDAUTYPE = 3
LDAUL = $LDAUL
LDAUU = $LDAUU
LDAUJ = $LDAUJ
">>INCAR
echo "written INCAR!"
echo "###################"
echo "writing POSCAR"
        echo -e "$(sed  "6c${name}" POSCAR)">POSCAR 
        echo -e "$(sed  "7c${number}" POSCAR)">POSCAR
                echo "written POSCAR!"
##########################run##########################
       cat>INPUT<<!
103
!
vaspkit < INPUT
rm INPUT                
bash ../../run.wsy

            break
            fi
            
        
########################222222222######################################
#######################################################################
            
            if (( $num==$arg2  ))&&(( $E==1 ));then
                echo "condition 2  [1--1]"
                value=$i
                atoms_num=$(echo $(head -7 POSCAR|awk '{print $(i)}' i="$i"))
                #BUbian
                name=`echo $( head -6 POSCAR|tail -1|awk '$(value)=$(value)"' value="$value" )`
                number=`echo $(head -7 POSCAR|tail -1|awk '$(value)=$(value)' value="$value")`
                #input INCAR
                LDAUL=""
                LDAUU=""
                LDAUJ=""
                A=-1
                B=0
                for ((j=1;j<=${Num_ELE};j++))            
                    do
                    if (($j==$i));then
                        LDAUL="$LDAUL $arg3"
                        LDAUU="$LDAUU $file"
                        LDAUJ="$LDAUJ $file"
                    else
                        LDAUL="$LDAUL $A"
                        LDAUU="$LDAUU $B"
                        LDAUJ="$LDAUJ $B"
                    fi
                done
echo "writing INCAR...."                
echo "###########LSDAU###########
LDAU=.TRUE.
LDAUTYPE = 3
LDAUL = $LDAUL
LDAUU = $LDAUU
LDAUJ = $LDAUJ
">>INCAR
echo "written INCAR!"
echo "###################"
echo "writing POSCAR"
        echo -e "$(sed  "6c${name}" POSCAR)">POSCAR 
        echo -e "$(sed  "7c${number}" POSCAR)">POSCAR
        echo "Written!"
                #########  
##########################run##########################  
       cat>INPUT<<!
103
!
vaspkit < INPUT
rm INPUT              
bash ../../run.wsy     
            break
            fi
            
            
##########################3333333333###################################
#######################################################################           
            if (( $num>$arg2 ))&&(( $E>=3 ))&&(( $((arg2+E-num))!=1 ));then
                echo "condition 3  [3--1 1 1]"
                value=$i
                atoms_num=$(echo $(head -7 POSCAR|awk '{print $(i)}' i="$i" ))
                name=$( echo $( head -6 POSCAR|tail -1|awk '$(value)=$(value)" "$(value)" "$(value)' value="$value" ))
                number=$( echo $( head -7 POSCAR|tail -1|awk '$(value)=E-1-num+arg2" " "1" " " num-arg2' value="$value" E="$E" arg2="$arg2" num="$num" ))
                #input INCAR
                LDAUL="0"
                LDAUU="0"
                LDAUJ="0"
                A=-1
                B=0
                ((Num_ELE+=1))
                for ((j=1;j<=${Num_ELE};j++))            
                    do
                    if (($j==$i));then
                        LDAUL="$LDAUL $arg3"
                        LDAUU="$LDAUU $file"
                        LDAUJ="$LDAUJ $file"
                    else
                        LDAUL="$LDAUL $A"
                        LDAUU="$LDAUU $B"
                        LDAUJ="$LDAUJ $B"
                    fi
                done
echo "writing INCAR...."                
echo "###########LSDAU###########
LDAU=.TRUE.
LDAUTYPE = 3
LDAUL = $LDAUL
LDAUU = $LDAUU
LDAUJ = $LDAUJ
">>INCAR
echo "written INCAR!"
echo "###################"
echo "writing POSCAR"
        echo -e "$(sed  "6c${name}" POSCAR)">POSCAR 
        echo -e "$(sed  "7c${number}" POSCAR)">POSCAR
                echo "written POSCAR!"
                #########
##########################run##########################
       cat>INPUT<<!
103
!
vaspkit < INPUT
rm INPUT                
bash ../../run.wsy      
            break
            fi
            
##########################444444444####################################
#######################################################################           
            if (( $num>$arg2 ))&&(( $E>=3 ))&&(( $((arg2+E-num))==1 ));then
                echo "condition 3  [3--1 2]"
                value=$i
                atoms_num=$(echo $(head -7 POSCAR|awk '{print $(i)}' i="$i" ))
                name=$( echo $( head -6 POSCAR|tail -1|awk '$(value)=$(value)" "$(value)' value="$value" ))
                number=$( echo $( head -7 POSCAR|tail -1|awk '$(value)="1" " " E-1' value="$value" E="$E" arg2="$arg2" num="$num" ))
                #input INCAR
                LDAUL=""
                LDAUU=""
                LDAUJ=""
                A=-1
                B=0
                ((Num_ELE+=1))
                for ((j=1;j<=${Num_ELE};j++))            
                    do
                    if (($j==$i));then
                        LDAUL="$LDAUL $arg3"
                        LDAUU="$LDAUU $file"
                        LDAUJ="$LDAUJ $file"
                    else
                        LDAUL="$LDAUL $A"
                        LDAUU="$LDAUU $B"
                        LDAUJ="$LDAUJ $B"
                    fi
                done

echo "writing INCAR...."                
echo "###########LSDAU###########
LDAU=.TRUE.
LDAUTYPE = 3
LDAUL = $LDAUL
LDAUU = $LDAUU
LDAUJ = $LDAUJ
">>INCAR
echo "written INCAR!"
echo "###################"
echo "writing POSCAR"
        echo -e "$(sed  "6c${name}" POSCAR)">POSCAR 
        echo -e "$(sed  "7c${number}" POSCAR)">POSCAR
                echo "written POSCAR!"
                ######### 
##########################run##########################
       cat>INPUT<<!
103
!
vaspkit < INPUT
rm INPUT                
bash ../../run.wsy
            break
            fi
                       
############################5555555####################################
#######################################################################    
            if (( $num>$arg2  ))&&(( $E==2  ));then
                echo "condition 5  [2--1 1]"
                value=$i
                atoms_num=$(echo $(head -7 POSCAR|awk '{print $(i)}' i="$i" ))
                name=$( echo $( head -6 POSCAR|tail -1|awk '$(value)=$(value)" "$(value) ' value="$value" ))
                number=$( echo $( head -7 POSCAR|tail -1|awk '$(value)="1" " " "1" ' value="$value" ))
               #input INCAR
                LDAUL=""
                LDAUU=""
                LDAUJ=""
                A=-1
                B=0
                ((Num_ELE+=1))
                for ((j=1;j<=${Num_ELE};j++))            
                    do
                    if (($j==$i));then
                        LDAUL="$LDAUL $arg3"
                        LDAUU="$LDAUU $file"
                        LDAUJ="$LDAUJ $file"
                    else
                        LDAUL="$LDAUL $A"
                        LDAUU="$LDAUU $B"
                        LDAUJ="$LDAUJ $B"
                    fi
                done
echo "writing INCAR...."                
echo "###########LSDAU###########
LDAU=.TRUE.
LDAUTYPE = 3
LDAUL = $LDAUL
LDAUU = $LDAUU
LDAUJ = $LDAUJ
">>INCAR
echo "written INCAR!"
echo "###################"
echo "writing POSCAR"
        echo -e "$(sed  "6c${name}" POSCAR)">POSCAR 
        echo -e "$(sed  "7c${number}" POSCAR)">POSCAR
                echo "written POSCAR!"
                #########     
##########################run##########################
       cat>INPUT<<!
103
!
vaspkit < INPUT
rm INPUT                
bash ../../run.wsy 
            break
            fi
            
            
#######################################################################
#######################################################################            
            if  (( $num<$arg2  ));then  

                 continue
            fi

        done
        #3
    cd ..
    # 2-3
    done 
    cd ..

done   
#end 1
        
        #echo -e "$(sed  "6c${name}" POSCAR)">POSCAR 
        #echo -e "$(sed  "7c${number}" POSCAR)">POSCAR
    #done 
#cat POSCAR
#cat INCAR 
          echo "
            #######################################################
            #######################################################
            ###                                                 ###
            ###                  Finished ! !                   ### 
            ###                                                 ###
            ###                                                 ###
            #######################################################
            #######################################################
    "
    
fi

###########################################################################
if (( ${arg}==3 ));then
#echo "sorry,unfinished!"
echo "U     " "   NSCF   " "   SCF    " "   DIFF   "  "   Ueff" >output.wsy
for i in $(seq ${MIN} ${STEP} ${MAX})
        do
        atoms_num=$(echo $(head -1 input.wsy|awk '{print $1}'))
        orbit=$( echo $(head -2 input.wsy|tail -1|awk '{print $1}'))
        
        cd -- $i
        #######################CHG-DFT################################################
        cd -- 1-DFT
        chgDFT=`grep -$((atoms_num+3)) "total charge" OUTCAR|tail -1|awk '{print $((E+2))}' E="$orbit" `
        #######################CHG-NSCF################################################
        cd -- ../"2-U-NSCF"
        chgNSCF=`grep -$((atoms_num+3)) "total charge" OUTCAR|tail -1|awk '{print $((E+2))}' E="$orbit" `
        #######################CHG-SCF#################################################
        cd -- ../"3-U-SCF"
        chgSCF=`grep -$((atoms_num+3)) "total charge" OUTCAR|tail -1|awk '{print $((E+2))}' E="$orbit" `
        #########################################d
        CHGDIFF_NSCF=`awk -v m1=$chgNSCF -v m2=$chgDFT 'BEGIN{print m1-m2}'`
        CHGDIFF_SCF=`awk -v m1=$chgSCF -v m2=$chgDFT 'BEGIN{print m1-m2}'`
        CHGDIFF=`awk -v m1=$chgNSCF -v m2=$chgSCF 'BEGIN{print m1-m2}'`
        DELTA_V=$i
        ##############################CAL Ueff################################
        #echo $CHGDIFF_SCF $CHGDIFF_NSCF $DELTA_V 
        Ueff=$(awk -v DELTA_V=${DELTA_V} -v CHGDIFF_NSCF=${CHGDIFF_NSCF} -v CHGDIFF_SCF=${CHGDIFF_SCF} 'BEGIN{ print DELTA_V/CHGDIFF_SCF-DELTA_V/CHGDIFF_NSCF}')
        #echo $Ueff
        cd ..
        cd ..
        echo "$i" "  " "$chgNSCF " "  " "$chgSCF " "  "$CHGDIFF"  " "$Ueff" >>output.wsy
        #echo "$chgNSCF " "$chgSCF "   >>data
    done
         echo "
            #######################################################
            #######################################################
            ###                                                 ###
            ###                  Finished ! !                   ### 
            ###                                                 ###
            ###                                                 ###
            #######################################################
            #######################################################
    "
fi